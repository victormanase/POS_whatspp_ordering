version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: pos_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root123}
      MYSQL_DATABASE: ${DB_NAME:-pos_system}
      MYSQL_USER: ${DB_USER:-pos_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-pos123}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    networks:
      - pos_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: pos_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pos_network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}

  # Flask Application
  web:
    build: .
    container_name: pos_web
    restart: unless-stopped
    ports:
      - "80:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=mysql+pymysql://${DB_USER:-pos_user}:${DB_PASSWORD:-pos123}@db:3306/${DB_NAME:-pos_system}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-very-secret-key-change-in-production}
      - DEFAULT_CURRENCY=${DEFAULT_CURRENCY:-TSH}
      - BUSINESS_NAME=${BUSINESS_NAME:-Your POS Business}
    volumes:
      - uploads_data:/app/app/static/uploads
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - pos_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: pos_nginx
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - uploads_data:/var/www/uploads:ro
    depends_on:
      - web
    networks:
      - pos_network
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local

networks:
  pos_network:
    driver: bridge